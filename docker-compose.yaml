services:
  user-service:
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=${USER_DB_URL}
      - SPRING_DATASOURCE_USERNAME=${USER_DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${USER_DB_PASSWORD}
    restart: unless-stopped

  track-service:
    container_name: track-service
    build:
      context: ./track-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - postgres
      - minio
    environment:
      - SPRING_DATASOURCE_URL=${TRACK_DB_URL}
      - SPRING_DATASOURCE_USERNAME=${TRACK_DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${TRACK_DB_PASSWORD}
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  minio:
    container_name: minio
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server /data/minio --console-address :9090
    ports:
      - '9090:9090'
      - '9000:9000'
    networks:
      - minio
    volumes:
      - minio-data:/data/minio

networks:
  postgres:
    driver: bridge
  minio:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  minio-data: